<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.js.wcafe.dao.AccountMapper">

	<select id="readAllUsers" resultType="Account">SELECT* FROM USER</select>
	<select id="readAccount" parameterType="String" resultType="Account">
		SELECT * FROM USER WHERE id=#{id}
	</select>
	<select id="readAuthorities" parameterType="String" resultType="String">
		SELECT authorityId FROM USERAUTHORITIES WHERE userId=#{id}
	</select>
	<select id="isAuthorityExist" parameterType="String" resultType="int">
		SELECT count(*) FROM AUTHORITY WHERE authority_name=#{authority}
	</select>
	<select id="readOrders" parameterType="String" resultMap="com.js.wcafe.dao.OrderMapper.orderResultMap">
		select
			o.*,
			d.id         as detail_id, 
			d.whip       as detail_whip, 
			d.shot       as detail_shot, 
			d.quantity   as detail_quantity, 
			d.orderId    as detail_orderId,
			p.id         as product_id,
			p.name       as product_name,
			p.validate   as product_validate,
			p.price      as product_price,
			p.seconds    as product_seconds,
			p.categoryId as product_categoryId
		from `order` o
		left outer join (orderdetail d left outer join product p on d.productId=p.id) on d.orderId = o.id
		where o.userId = #{id}
	</select>
	
	<select id="readOrdersWhen" resultMap="com.js.wcafe.dao.OrderMapper.orderResultMap">
		select
			o.*,
			d.id         as detail_id, 
			d.whip       as detail_whip, 
			d.shot       as detail_shot, 
			d.quantity   as detail_quantity, 
			d.orderId    as detail_orderId,
			p.id         as product_id,
			p.name       as product_name,
			p.validate   as product_validate,
			p.price      as product_price,
			p.seconds    as product_seconds,
			p.categoryId as product_categoryId
		from `order` o
		left outer join (orderdetail d left outer join product p on d.productId=p.id) on d.orderId = o.id
		where createdAt >= NOW() - INTERVAL #{time} ${unit} AND o.userId=#{id}
	</select>
	
	<select id="thisMonth" parameterType="String" resultMap="com.js.wcafe.dao.OrderMapper.orderResultMap">
		select
			o.*,
			d.id         as detail_id, 
			d.whip       as detail_whip, 
			d.shot       as detail_shot, 
			d.quantity   as detail_quantity, 
			d.orderId    as detail_orderId,
			p.id         as product_id,
			p.name       as product_name,
			p.validate   as product_validate,
			p.price      as product_price,
			p.seconds    as product_seconds,
			p.categoryId as product_categoryId
		from `order` o
		left outer join (orderdetail d left outer join product p on d.productId=p.id) on d.orderId = o.id
		WHERE MONTH(createdAt) = MONTH(CURRENT_DATE())
		AND YEAR(createdAt) = YEAR(CURRENT_DATE())
		AND o.userId=#{id}
	</select>
	
	
	<insert id="insertUser" parameterType="Account">
		INSERT INTO USER VALUES(#{account.id},#{account.password},#{account.name},null,null,#{account.enabled},#{account.accountNonExpired},#{account.accountNonLocked},#{account.credentialsNonExpired})
	</insert>
	<insert id="insertAuthority" parameterType="String">INSERT INTO AUTHORITY VALUES(#{authority})</insert>
	<insert id="insertUserAuthority">INSERT INTO USERAUTHORITIES(userId, authorityId) VALUES(#{id},#{authority})</insert>
	
</mapper>